В этой статье мы расскажем о  следующем:

Что такое дружественные функции и, главное, зачем они нужны.
Чем отличаются обычные методы класса от дружественных функций класса.
Как объявлять и определять дружественные функции.
Как вызывать дружественные функции из главной main() функции .

Самым важным, но и, скорее всего, самым непонятным для вас сейчас станет определение дружественной функции. Дружественная функция — это функция, которая не является членом класса, но имеет доступ к членам класса, объявленным в полях private или protected. Долго не вникайте в суть этого определения, а лучше сразу переходите к следующему абзацу. Обещаю, что после прочтения статьи вы вернетесь к этому определению и  вас посетит мысль: «Ну да — так и есть! Тут все понятно!»

Приступим к основному занятию программиста — практике! В примере запрограммируем следующее: создадим класс Woman25, который, используя дружественные функции  и обычные методы класса, будет получать данные об объекте (имя и вес) и выводить их на экран. Методы и friend-функции будут выполнять аналогичные действия. В этом и есть особенная польза данного примера — вы сможете посмотреть отличия в объявлении и определении дружественных функций от обычных методов класса. На основании полученных данных,  программа даст пользователю совет относительно корректировки его веса.  Ну что-же, лучше один раз увидеть…